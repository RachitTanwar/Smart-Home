{"version":3,"names":["PerformanceObserver","addEntry","performance","createPerformance","isTurboModuleEnabled","global","__turboModuleProxy","RNPerformanceManager","require","default","NativeModules","Platform","OS","emitter","NativeEventEmitter","addListener","data","PerformanceReactNativeMark","name","startTime","detail","PerformanceMetric","value","setResourceLoggingEnabled","enabled","installResourceLogger","globalThis","uninstallResourceLogger"],"sources":["index.ts"],"sourcesContent":["import { NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { createPerformance } from './performance';\nimport {\n  PerformanceReactNativeMark,\n  PerformanceMetric,\n} from './performance-entry';\nimport {\n  installResourceLogger,\n  uninstallResourceLogger,\n} from './resource-logger';\nconst { PerformanceObserver, addEntry, performance } = createPerformance();\n\ndeclare const global: { __turboModuleProxy: null | {} };\n\nconst isTurboModuleEnabled = global.__turboModuleProxy != null;\n\nconst RNPerformanceManager = isTurboModuleEnabled\n  ? require('./NativeRNPerformanceManager').default\n  : NativeModules.RNPerformanceManager;\n\nif (Platform.OS === 'android' || RNPerformanceManager) {\n  const emitter = new NativeEventEmitter(RNPerformanceManager);\n\n  emitter.addListener('mark', (data) => {\n    addEntry(\n      new PerformanceReactNativeMark(data.name, data.startTime, data.detail)\n    );\n  });\n\n  emitter.addListener('metric', (data) => {\n    addEntry(\n      new PerformanceMetric(data.name, {\n        startTime: data.startTime,\n        value: data.value,\n        detail: data.detail,\n      })\n    );\n  });\n}\n\nexport default performance;\nexport type Performance = typeof performance;\n\nexport const setResourceLoggingEnabled = (enabled = true) => {\n  if (enabled) {\n    //@ts-ignore\n    installResourceLogger(globalThis, performance, addEntry);\n  } else {\n    uninstallResourceLogger(globalThis);\n  }\n};\n\nexport { PerformanceObserver };\nexport type {\n  EntryType,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceMetric,\n  PerformanceEntry,\n  PerformanceReactNativeMark,\n  PerformanceResourceTiming,\n} from './performance-entry';\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAIA;;AAIA,MAAM;EAAEA,mBAAF;EAAuBC,QAAvB;EAAiCC;AAAjC,IAAiD,IAAAC,8BAAA,GAAvD;;AAIA,MAAMC,oBAAoB,GAAGC,MAAM,CAACC,kBAAP,IAA6B,IAA1D;AAEA,MAAMC,oBAAoB,GAAGH,oBAAoB,GAC7CI,OAAO,CAAC,8BAAD,CAAP,CAAwCC,OADK,GAE7CC,0BAAA,CAAcH,oBAFlB;;AAIA,IAAII,qBAAA,CAASC,EAAT,KAAgB,SAAhB,IAA6BL,oBAAjC,EAAuD;EACrD,MAAMM,OAAO,GAAG,IAAIC,+BAAJ,CAAuBP,oBAAvB,CAAhB;EAEAM,OAAO,CAACE,WAAR,CAAoB,MAApB,EAA6BC,IAAD,IAAU;IACpCf,QAAQ,CACN,IAAIgB,4CAAJ,CAA+BD,IAAI,CAACE,IAApC,EAA0CF,IAAI,CAACG,SAA/C,EAA0DH,IAAI,CAACI,MAA/D,CADM,CAAR;EAGD,CAJD;EAMAP,OAAO,CAACE,WAAR,CAAoB,QAApB,EAA+BC,IAAD,IAAU;IACtCf,QAAQ,CACN,IAAIoB,mCAAJ,CAAsBL,IAAI,CAACE,IAA3B,EAAiC;MAC/BC,SAAS,EAAEH,IAAI,CAACG,SADe;MAE/BG,KAAK,EAAEN,IAAI,CAACM,KAFmB;MAG/BF,MAAM,EAAEJ,IAAI,CAACI;IAHkB,CAAjC,CADM,CAAR;EAOD,CARD;AASD;;eAEclB,W;;;AAGR,MAAMqB,yBAAyB,GAAG,YAAoB;EAAA,IAAnBC,OAAmB,uEAAT,IAAS;;EAC3D,IAAIA,OAAJ,EAAa;IACX;IACA,IAAAC,qCAAA,EAAsBC,UAAtB,EAAkCxB,WAAlC,EAA+CD,QAA/C;EACD,CAHD,MAGO;IACL,IAAA0B,uCAAA,EAAwBD,UAAxB;EACD;AACF,CAPM"}