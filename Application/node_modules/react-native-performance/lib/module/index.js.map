{"version":3,"names":["NativeEventEmitter","NativeModules","Platform","createPerformance","PerformanceReactNativeMark","PerformanceMetric","installResourceLogger","uninstallResourceLogger","PerformanceObserver","addEntry","performance","isTurboModuleEnabled","global","__turboModuleProxy","RNPerformanceManager","require","default","OS","emitter","addListener","data","name","startTime","detail","value","setResourceLoggingEnabled","enabled","globalThis"],"sources":["index.ts"],"sourcesContent":["import { NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { createPerformance } from './performance';\nimport {\n  PerformanceReactNativeMark,\n  PerformanceMetric,\n} from './performance-entry';\nimport {\n  installResourceLogger,\n  uninstallResourceLogger,\n} from './resource-logger';\nconst { PerformanceObserver, addEntry, performance } = createPerformance();\n\ndeclare const global: { __turboModuleProxy: null | {} };\n\nconst isTurboModuleEnabled = global.__turboModuleProxy != null;\n\nconst RNPerformanceManager = isTurboModuleEnabled\n  ? require('./NativeRNPerformanceManager').default\n  : NativeModules.RNPerformanceManager;\n\nif (Platform.OS === 'android' || RNPerformanceManager) {\n  const emitter = new NativeEventEmitter(RNPerformanceManager);\n\n  emitter.addListener('mark', (data) => {\n    addEntry(\n      new PerformanceReactNativeMark(data.name, data.startTime, data.detail)\n    );\n  });\n\n  emitter.addListener('metric', (data) => {\n    addEntry(\n      new PerformanceMetric(data.name, {\n        startTime: data.startTime,\n        value: data.value,\n        detail: data.detail,\n      })\n    );\n  });\n}\n\nexport default performance;\nexport type Performance = typeof performance;\n\nexport const setResourceLoggingEnabled = (enabled = true) => {\n  if (enabled) {\n    //@ts-ignore\n    installResourceLogger(globalThis, performance, addEntry);\n  } else {\n    uninstallResourceLogger(globalThis);\n  }\n};\n\nexport { PerformanceObserver };\nexport type {\n  EntryType,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceMetric,\n  PerformanceEntry,\n  PerformanceReactNativeMark,\n  PerformanceResourceTiming,\n} from './performance-entry';\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,aAA7B,EAA4CC,QAA5C,QAA4D,cAA5D;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SACEC,0BADF,EAEEC,iBAFF,QAGO,qBAHP;AAIA,SACEC,qBADF,EAEEC,uBAFF,QAGO,mBAHP;AAIA,MAAM;EAAEC,mBAAF;EAAuBC,QAAvB;EAAiCC;AAAjC,IAAiDP,iBAAiB,EAAxE;AAIA,MAAMQ,oBAAoB,GAAGC,MAAM,CAACC,kBAAP,IAA6B,IAA1D;AAEA,MAAMC,oBAAoB,GAAGH,oBAAoB,GAC7CI,OAAO,CAAC,8BAAD,CAAP,CAAwCC,OADK,GAE7Cf,aAAa,CAACa,oBAFlB;;AAIA,IAAIZ,QAAQ,CAACe,EAAT,KAAgB,SAAhB,IAA6BH,oBAAjC,EAAuD;EACrD,MAAMI,OAAO,GAAG,IAAIlB,kBAAJ,CAAuBc,oBAAvB,CAAhB;EAEAI,OAAO,CAACC,WAAR,CAAoB,MAApB,EAA6BC,IAAD,IAAU;IACpCX,QAAQ,CACN,IAAIL,0BAAJ,CAA+BgB,IAAI,CAACC,IAApC,EAA0CD,IAAI,CAACE,SAA/C,EAA0DF,IAAI,CAACG,MAA/D,CADM,CAAR;EAGD,CAJD;EAMAL,OAAO,CAACC,WAAR,CAAoB,QAApB,EAA+BC,IAAD,IAAU;IACtCX,QAAQ,CACN,IAAIJ,iBAAJ,CAAsBe,IAAI,CAACC,IAA3B,EAAiC;MAC/BC,SAAS,EAAEF,IAAI,CAACE,SADe;MAE/BE,KAAK,EAAEJ,IAAI,CAACI,KAFmB;MAG/BD,MAAM,EAAEH,IAAI,CAACG;IAHkB,CAAjC,CADM,CAAR;EAOD,CARD;AASD;;AAED,eAAeb,WAAf;AAGA,OAAO,MAAMe,yBAAyB,GAAG,YAAoB;EAAA,IAAnBC,OAAmB,uEAAT,IAAS;;EAC3D,IAAIA,OAAJ,EAAa;IACX;IACApB,qBAAqB,CAACqB,UAAD,EAAajB,WAAb,EAA0BD,QAA1B,CAArB;EACD,CAHD,MAGO;IACLF,uBAAuB,CAACoB,UAAD,CAAvB;EACD;AACF,CAPM;AASP,SAASnB,mBAAT"}