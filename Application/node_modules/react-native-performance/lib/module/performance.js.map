{"version":3,"names":["createEventEmitter","createPerformanceObserver","PerformanceMark","PerformanceMeasure","PerformanceMetric","defaultNow","global","performance","now","bind","createPerformance","timeOrigin","addEventListener","removeEventListener","emit","marks","Map","entries","addEntry","entry","push","entryType","set","name","startTime","removeEntries","type","filter","delete","mark","markName","markOptions","undefined","detail","clearMarks","clearMeasures","clearMetrics","convertMarkToTimestamp","markOrTimestamp","has","Error","get","TypeError","measure","measureName","startOrMeasureOptions","endMark","start","end","constructor","Object","duration","metric","valueOrOptions","value","getEntries","slice","getEntriesByName","getEntriesByType","PerformanceObserver"],"sources":["performance.ts"],"sourcesContent":["import { createEventEmitter } from './event-emitter';\nimport { createPerformanceObserver } from './performance-observer';\nimport {\n  EntryType,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceMetric,\n  PerformanceEntry,\n  PerformanceReactNativeMark,\n  PerformanceResourceTiming,\n} from './performance-entry';\n\n// @ts-ignore\nexport const defaultNow: () => number = global.performance.now.bind(\n  // @ts-ignore\n  global.performance\n);\n\nexport type MarkOptions = {\n  startTime?: number;\n  detail?: any;\n};\n\nexport type MeasureOptions = {\n  start?: string | number;\n  end?: string | number;\n  duration?: number;\n  detail?: any;\n};\n\nexport type StartOrMeasureOptions = string | MeasureOptions | undefined;\n\nexport type MetricOptions = {\n  startTime: number;\n  detail: any;\n  value: number | string;\n};\n\nexport type ValueOrOptions = number | string | MetricOptions;\n\nexport const createPerformance = (now: () => number = defaultNow) => {\n  const timeOrigin = now();\n  const {\n    addEventListener,\n    removeEventListener,\n    emit,\n  } = createEventEmitter<PerformanceEntry>();\n  const marks = new Map<string, number>();\n  let entries: PerformanceEntry[] = [];\n\n  function addEntry<T extends PerformanceEntry>(entry: T): T {\n    entries.push(entry);\n    if (entry.entryType === 'mark' || entry.entryType === 'react-native-mark') {\n      marks.set(entry.name, entry.startTime);\n    }\n    emit(entry);\n    return entry;\n  }\n\n  const removeEntries = (type: EntryType, name?: string) => {\n    entries = entries.filter((entry) => {\n      if (entry.entryType === type && (!name || entry.name === name)) {\n        marks.delete(entry.name);\n        return false;\n      }\n      return true;\n    });\n  };\n\n  const mark = (markName: string, markOptions: MarkOptions = {}) =>\n    addEntry(\n      new PerformanceMark(markName, {\n        startTime:\n          'startTime' in markOptions && markOptions.startTime !== undefined\n            ? markOptions.startTime\n            : now(),\n        detail: markOptions.detail,\n      })\n    );\n\n  const clearMarks = (name?: string) => removeEntries('mark', name);\n\n  const clearMeasures = (name?: string) => removeEntries('measure', name);\n\n  const clearMetrics = (name?: string) => removeEntries('metric', name);\n\n  const convertMarkToTimestamp = (markOrTimestamp: string | number) => {\n    switch (typeof markOrTimestamp) {\n      case 'string': {\n        if (!marks.has(markOrTimestamp)) {\n          throw new Error(\n            `Failed to execute 'measure' on 'Performance': The mark '${markOrTimestamp}' does not exist.`\n          );\n        }\n        return marks.get(markOrTimestamp);\n      }\n      case 'number': {\n        return markOrTimestamp;\n      }\n      default:\n        throw new TypeError(\n          `Failed to execute 'measure' on 'Performance': Expected mark name or timestamp, got '${markOrTimestamp}'.`\n        );\n    }\n  };\n\n  const measure = (\n    measureName: string,\n    startOrMeasureOptions?: StartOrMeasureOptions,\n    endMark?: string | number\n  ) => {\n    let start = 0;\n    let end = 0;\n    let detail: any;\n\n    if (\n      startOrMeasureOptions &&\n      typeof startOrMeasureOptions === 'object' &&\n      startOrMeasureOptions.constructor == Object\n    ) {\n      if (endMark) {\n        throw new TypeError(\n          `Failed to execute 'measure' on 'Performance': The measureOptions and endMark arguments may not be combined.`\n        );\n      }\n      if (!startOrMeasureOptions.start && !startOrMeasureOptions.end) {\n        throw new TypeError(\n          `Failed to execute 'measure' on 'Performance': At least one of the start and end option must be passed.`\n        );\n      }\n      if (\n        startOrMeasureOptions.start &&\n        startOrMeasureOptions.end &&\n        startOrMeasureOptions.duration\n      ) {\n        throw new TypeError(\n          `Failed to execute 'measure' on 'Performance': Cannot send start, end and duration options together.`\n        );\n      }\n\n      detail = startOrMeasureOptions.detail;\n\n      if (startOrMeasureOptions && startOrMeasureOptions.end) {\n        end = convertMarkToTimestamp(startOrMeasureOptions.end);\n      } else if (\n        startOrMeasureOptions &&\n        startOrMeasureOptions.start &&\n        startOrMeasureOptions.duration\n      ) {\n        end =\n          convertMarkToTimestamp(startOrMeasureOptions.start) +\n          convertMarkToTimestamp(startOrMeasureOptions.duration);\n      } else {\n        end = now();\n      }\n\n      if (startOrMeasureOptions && startOrMeasureOptions.start) {\n        start = convertMarkToTimestamp(startOrMeasureOptions.start);\n      } else if (\n        startOrMeasureOptions &&\n        startOrMeasureOptions.end &&\n        startOrMeasureOptions.duration\n      ) {\n        start =\n          convertMarkToTimestamp(startOrMeasureOptions.end) -\n          convertMarkToTimestamp(startOrMeasureOptions.duration);\n      } else {\n        start = timeOrigin;\n      }\n    } else {\n      if (endMark) {\n        end = convertMarkToTimestamp(endMark);\n      } else {\n        end = now();\n      }\n\n      if (typeof startOrMeasureOptions === 'string') {\n        start = convertMarkToTimestamp(startOrMeasureOptions);\n      } else {\n        start = timeOrigin;\n      }\n    }\n\n    return addEntry(\n      new PerformanceMeasure(measureName, {\n        detail,\n        startTime: start,\n        duration: end - start,\n      })\n    );\n  };\n\n  const metric = (name: string, valueOrOptions: ValueOrOptions) => {\n    let value: string | number;\n    let startTime: number | undefined;\n    let detail: any;\n\n    if (\n      typeof valueOrOptions === 'object' &&\n      valueOrOptions.constructor == Object\n    ) {\n      if (!valueOrOptions.value) {\n        throw new TypeError(\n          `Failed to execute 'metric' on 'Performance': The value option must be passed.`\n        );\n      }\n      value = valueOrOptions.value;\n      startTime = valueOrOptions.startTime;\n      detail = valueOrOptions.detail;\n    } else if (\n      typeof valueOrOptions === 'undefined' ||\n      valueOrOptions === null\n    ) {\n      throw new TypeError(\n        `Failed to execute 'metric' on 'Performance': The value option must be passed.`\n      );\n    } else {\n      value = valueOrOptions as string | number;\n    }\n\n    return addEntry(\n      new PerformanceMetric(name, {\n        startTime: startTime ? startTime : now(),\n        value,\n        detail,\n      })\n    );\n  };\n\n  const getEntries = () => entries.slice(0);\n\n  const getEntriesByName = (name: string, type?: EntryType) =>\n    entries.filter(\n      (entry) => entry.name === name && (!type || entry.entryType === type)\n    );\n\n  function getEntriesByType(type: 'measure'): PerformanceMeasure[];\n  function getEntriesByType(type: 'mark'): PerformanceMark[];\n  function getEntriesByType(type: 'resource'): PerformanceResourceTiming[];\n  function getEntriesByType(type: 'metric'): PerformanceMetric[];\n  function getEntriesByType(\n    type: 'react-native-mark'\n  ): PerformanceReactNativeMark[];\n  function getEntriesByType(type: EntryType) {\n    return entries.filter((entry) => entry.entryType === type);\n  }\n\n  const PerformanceObserver = createPerformanceObserver({\n    addEventListener,\n    removeEventListener,\n    getEntriesByType,\n  });\n\n  return {\n    PerformanceObserver,\n    addEntry,\n    performance: {\n      timeOrigin,\n      now,\n      mark,\n      clearMarks,\n      measure,\n      clearMeasures,\n      metric,\n      clearMetrics,\n      getEntries,\n      getEntriesByName,\n      getEntriesByType,\n    },\n  };\n};\n\nexport type Performance = ReturnType<typeof createPerformance>['performance'];\n"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,iBAAnC;AACA,SAASC,yBAAT,QAA0C,wBAA1C;AACA,SAEEC,eAFF,EAGEC,kBAHF,EAIEC,iBAJF,QAQO,qBARP,C,CAUA;;AACA,OAAO,MAAMC,UAAwB,GAAGC,MAAM,CAACC,WAAP,CAAmBC,GAAnB,CAAuBC,IAAvB,EACtC;AACAH,MAAM,CAACC,WAF+B,CAAjC;AA2BP,OAAO,MAAMG,iBAAiB,GAAG,YAAoC;EAAA,IAAnCF,GAAmC,uEAAfH,UAAe;EACnE,MAAMM,UAAU,GAAGH,GAAG,EAAtB;EACA,MAAM;IACJI,gBADI;IAEJC,mBAFI;IAGJC;EAHI,IAIFd,kBAAkB,EAJtB;EAKA,MAAMe,KAAK,GAAG,IAAIC,GAAJ,EAAd;EACA,IAAIC,OAA2B,GAAG,EAAlC;;EAEA,SAASC,QAAT,CAA8CC,KAA9C,EAA2D;IACzDF,OAAO,CAACG,IAAR,CAAaD,KAAb;;IACA,IAAIA,KAAK,CAACE,SAAN,KAAoB,MAApB,IAA8BF,KAAK,CAACE,SAAN,KAAoB,mBAAtD,EAA2E;MACzEN,KAAK,CAACO,GAAN,CAAUH,KAAK,CAACI,IAAhB,EAAsBJ,KAAK,CAACK,SAA5B;IACD;;IACDV,IAAI,CAACK,KAAD,CAAJ;IACA,OAAOA,KAAP;EACD;;EAED,MAAMM,aAAa,GAAG,CAACC,IAAD,EAAkBH,IAAlB,KAAoC;IACxDN,OAAO,GAAGA,OAAO,CAACU,MAAR,CAAgBR,KAAD,IAAW;MAClC,IAAIA,KAAK,CAACE,SAAN,KAAoBK,IAApB,KAA6B,CAACH,IAAD,IAASJ,KAAK,CAACI,IAAN,KAAeA,IAArD,CAAJ,EAAgE;QAC9DR,KAAK,CAACa,MAAN,CAAaT,KAAK,CAACI,IAAnB;QACA,OAAO,KAAP;MACD;;MACD,OAAO,IAAP;IACD,CANS,CAAV;EAOD,CARD;;EAUA,MAAMM,IAAI,GAAG,UAACC,QAAD;IAAA,IAAmBC,WAAnB,uEAA8C,EAA9C;IAAA,OACXb,QAAQ,CACN,IAAIhB,eAAJ,CAAoB4B,QAApB,EAA8B;MAC5BN,SAAS,EACP,eAAeO,WAAf,IAA8BA,WAAW,CAACP,SAAZ,KAA0BQ,SAAxD,GACID,WAAW,CAACP,SADhB,GAEIhB,GAAG,EAJmB;MAK5ByB,MAAM,EAAEF,WAAW,CAACE;IALQ,CAA9B,CADM,CADG;EAAA,CAAb;;EAWA,MAAMC,UAAU,GAAIX,IAAD,IAAmBE,aAAa,CAAC,MAAD,EAASF,IAAT,CAAnD;;EAEA,MAAMY,aAAa,GAAIZ,IAAD,IAAmBE,aAAa,CAAC,SAAD,EAAYF,IAAZ,CAAtD;;EAEA,MAAMa,YAAY,GAAIb,IAAD,IAAmBE,aAAa,CAAC,QAAD,EAAWF,IAAX,CAArD;;EAEA,MAAMc,sBAAsB,GAAIC,eAAD,IAAsC;IACnE,QAAQ,OAAOA,eAAf;MACE,KAAK,QAAL;QAAe;UACb,IAAI,CAACvB,KAAK,CAACwB,GAAN,CAAUD,eAAV,CAAL,EAAiC;YAC/B,MAAM,IAAIE,KAAJ,CACH,2DAA0DF,eAAgB,mBADvE,CAAN;UAGD;;UACD,OAAOvB,KAAK,CAAC0B,GAAN,CAAUH,eAAV,CAAP;QACD;;MACD,KAAK,QAAL;QAAe;UACb,OAAOA,eAAP;QACD;;MACD;QACE,MAAM,IAAII,SAAJ,CACH,uFAAsFJ,eAAgB,IADnG,CAAN;IAbJ;EAiBD,CAlBD;;EAoBA,MAAMK,OAAO,GAAG,CACdC,WADc,EAEdC,qBAFc,EAGdC,OAHc,KAIX;IACH,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,GAAG,GAAG,CAAV;IACA,IAAIf,MAAJ;;IAEA,IACEY,qBAAqB,IACrB,OAAOA,qBAAP,KAAiC,QADjC,IAEAA,qBAAqB,CAACI,WAAtB,IAAqCC,MAHvC,EAIE;MACA,IAAIJ,OAAJ,EAAa;QACX,MAAM,IAAIJ,SAAJ,CACH,6GADG,CAAN;MAGD;;MACD,IAAI,CAACG,qBAAqB,CAACE,KAAvB,IAAgC,CAACF,qBAAqB,CAACG,GAA3D,EAAgE;QAC9D,MAAM,IAAIN,SAAJ,CACH,wGADG,CAAN;MAGD;;MACD,IACEG,qBAAqB,CAACE,KAAtB,IACAF,qBAAqB,CAACG,GADtB,IAEAH,qBAAqB,CAACM,QAHxB,EAIE;QACA,MAAM,IAAIT,SAAJ,CACH,qGADG,CAAN;MAGD;;MAEDT,MAAM,GAAGY,qBAAqB,CAACZ,MAA/B;;MAEA,IAAIY,qBAAqB,IAAIA,qBAAqB,CAACG,GAAnD,EAAwD;QACtDA,GAAG,GAAGX,sBAAsB,CAACQ,qBAAqB,CAACG,GAAvB,CAA5B;MACD,CAFD,MAEO,IACLH,qBAAqB,IACrBA,qBAAqB,CAACE,KADtB,IAEAF,qBAAqB,CAACM,QAHjB,EAIL;QACAH,GAAG,GACDX,sBAAsB,CAACQ,qBAAqB,CAACE,KAAvB,CAAtB,GACAV,sBAAsB,CAACQ,qBAAqB,CAACM,QAAvB,CAFxB;MAGD,CARM,MAQA;QACLH,GAAG,GAAGxC,GAAG,EAAT;MACD;;MAED,IAAIqC,qBAAqB,IAAIA,qBAAqB,CAACE,KAAnD,EAA0D;QACxDA,KAAK,GAAGV,sBAAsB,CAACQ,qBAAqB,CAACE,KAAvB,CAA9B;MACD,CAFD,MAEO,IACLF,qBAAqB,IACrBA,qBAAqB,CAACG,GADtB,IAEAH,qBAAqB,CAACM,QAHjB,EAIL;QACAJ,KAAK,GACHV,sBAAsB,CAACQ,qBAAqB,CAACG,GAAvB,CAAtB,GACAX,sBAAsB,CAACQ,qBAAqB,CAACM,QAAvB,CAFxB;MAGD,CARM,MAQA;QACLJ,KAAK,GAAGpC,UAAR;MACD;IACF,CAtDD,MAsDO;MACL,IAAImC,OAAJ,EAAa;QACXE,GAAG,GAAGX,sBAAsB,CAACS,OAAD,CAA5B;MACD,CAFD,MAEO;QACLE,GAAG,GAAGxC,GAAG,EAAT;MACD;;MAED,IAAI,OAAOqC,qBAAP,KAAiC,QAArC,EAA+C;QAC7CE,KAAK,GAAGV,sBAAsB,CAACQ,qBAAD,CAA9B;MACD,CAFD,MAEO;QACLE,KAAK,GAAGpC,UAAR;MACD;IACF;;IAED,OAAOO,QAAQ,CACb,IAAIf,kBAAJ,CAAuByC,WAAvB,EAAoC;MAClCX,MADkC;MAElCT,SAAS,EAAEuB,KAFuB;MAGlCI,QAAQ,EAAEH,GAAG,GAAGD;IAHkB,CAApC,CADa,CAAf;EAOD,CApFD;;EAsFA,MAAMK,MAAM,GAAG,CAAC7B,IAAD,EAAe8B,cAAf,KAAkD;IAC/D,IAAIC,KAAJ;IACA,IAAI9B,SAAJ;IACA,IAAIS,MAAJ;;IAEA,IACE,OAAOoB,cAAP,KAA0B,QAA1B,IACAA,cAAc,CAACJ,WAAf,IAA8BC,MAFhC,EAGE;MACA,IAAI,CAACG,cAAc,CAACC,KAApB,EAA2B;QACzB,MAAM,IAAIZ,SAAJ,CACH,+EADG,CAAN;MAGD;;MACDY,KAAK,GAAGD,cAAc,CAACC,KAAvB;MACA9B,SAAS,GAAG6B,cAAc,CAAC7B,SAA3B;MACAS,MAAM,GAAGoB,cAAc,CAACpB,MAAxB;IACD,CAZD,MAYO,IACL,OAAOoB,cAAP,KAA0B,WAA1B,IACAA,cAAc,KAAK,IAFd,EAGL;MACA,MAAM,IAAIX,SAAJ,CACH,+EADG,CAAN;IAGD,CAPM,MAOA;MACLY,KAAK,GAAGD,cAAR;IACD;;IAED,OAAOnC,QAAQ,CACb,IAAId,iBAAJ,CAAsBmB,IAAtB,EAA4B;MAC1BC,SAAS,EAAEA,SAAS,GAAGA,SAAH,GAAehB,GAAG,EADZ;MAE1B8C,KAF0B;MAG1BrB;IAH0B,CAA5B,CADa,CAAf;EAOD,CAnCD;;EAqCA,MAAMsB,UAAU,GAAG,MAAMtC,OAAO,CAACuC,KAAR,CAAc,CAAd,CAAzB;;EAEA,MAAMC,gBAAgB,GAAG,CAAClC,IAAD,EAAeG,IAAf,KACvBT,OAAO,CAACU,MAAR,CACGR,KAAD,IAAWA,KAAK,CAACI,IAAN,KAAeA,IAAf,KAAwB,CAACG,IAAD,IAASP,KAAK,CAACE,SAAN,KAAoBK,IAArD,CADb,CADF;;EAYA,SAASgC,gBAAT,CAA0BhC,IAA1B,EAA2C;IACzC,OAAOT,OAAO,CAACU,MAAR,CAAgBR,KAAD,IAAWA,KAAK,CAACE,SAAN,KAAoBK,IAA9C,CAAP;EACD;;EAED,MAAMiC,mBAAmB,GAAG1D,yBAAyB,CAAC;IACpDW,gBADoD;IAEpDC,mBAFoD;IAGpD6C;EAHoD,CAAD,CAArD;EAMA,OAAO;IACLC,mBADK;IAELzC,QAFK;IAGLX,WAAW,EAAE;MACXI,UADW;MAEXH,GAFW;MAGXqB,IAHW;MAIXK,UAJW;MAKXS,OALW;MAMXR,aANW;MAOXiB,MAPW;MAQXhB,YARW;MASXmB,UATW;MAUXE,gBAVW;MAWXC;IAXW;EAHR,CAAP;AAiBD,CAtOM"}